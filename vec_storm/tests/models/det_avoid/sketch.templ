pomdp

observables
start
endobservables

const int N = 4;
const int axMAX = N-1;
const int ayMAX = N-1;
const int axMIN = 0;
const int ayMIN = 0;
const int ob1x = 1;
const int ob1y = 1;
const double slippery = 0.0;

formula northenabled = ax != axMIN;
formula southenabled = ax != axMAX;
formula westenabled = ay != ayMIN;
formula eastenabled = ay != ayMAX;
observable "cangonorth" = northenabled;
observable "cangosouth" = southenabled;
observable "cangowest" = westenabled;
observable "cangoeast" = eastenabled;
formula done = start & ax = axMAX & ay = ayMAX;
observable "amdone" = done;
formula crash =  (ax = ob1x & ay = ob1y);
observable "hascrash" = crash;

observable "x" = ax;
observable "y" = ay;

module master
    start : bool init false;

    [placement] !start -> (start'=true);
    [north] start & !done -> true;
    [south] start  & !done -> true;
    [east] start  & !done-> true;
    [west] start & !done -> true;
endmodule

module alice
    ax : [axMIN..axMAX] init 0;
    ay : [ayMIN..ayMAX] init 0;

    [placement] true ->  1: (ax'=0) & (ay'=0);

    [west] northenabled -> (1-slippery): (ax'=max(ax-1,axMIN)) + slippery: (ax'=max(ax-2,axMIN));
    [east] southenabled -> (1-slippery): (ax'=min(ax+1,axMAX)) + slippery: (ax'=min(ax+2,axMAX));
    [south]  eastenabled -> (1-slippery): (ay'=min(ay+1,ayMAX)) + slippery: (ay'=min(ay+2,ayMAX));
    [north]  westenabled -> (1-slippery): (ay'=max(ay-1,ayMIN)) + slippery: (ay'=max(ay-2,ayMIN));
endmodule

rewards "costs"
    [north] true : 1;
    [south] true : 1;
    [west] true : 1;
    [east] true : 1;
endrewards


label "goal" = done;
label "traps" = crash;
label "notbad" =  !crash;
